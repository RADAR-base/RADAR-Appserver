#
# /*
#  *
#  *  * Copyright 2018 King's College London
#  *  *
#  *  * Licensed under the Apache License, Version 2.0 (the "License");
#  *  * you may not use this file except in compliance with the License.
#  *  * You may obtain a copy of the License at
#  *  *
#  *  *   http://www.apache.org/licenses/LICENSE-2.0
#  *  *
#  *  * Unless required by applicable law or agreed to in writing, software
#  *  * distributed under the License is distributed on an "AS IS" BASIS,
#  *  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  *  * See the License for the specific language governing permissions and
#  *  * limitations under the License.
#  *  *
#  *
#  */
#
server.port=8080

# Datasource
spring.jpa.hibernate.ddl-auto=none
spring.datasource.username=postgres
spring.datasource.password=radar
spring.datasource.url=jdbc:postgresql://localhost:5432/radar
#jdbc:hsqldb:hsql://localhost:9001/appserver for running hsql separately in dev or testing
spring.jpa.properties.hibernate.jdbc.time_zone=UTC
spring.jpa.properties.hibernate.generate_statistics=false
spring.jpa.properties.hibernate.jdbc.batch_size=20
spring.jpa.properties.hibernate.order_inserts=true
##spring.jpa.properties.hibernate.dialect=liquibase.ext.hibernate.database.HibernateGenericDialect
#spring.jackson.serialization.write-dates-as-timestamps=false

# H2 console
spring.h2.console.enabled=true
spring.h2.console.path=/console
spring.h2.console.settings.web-allow-others=true

# Quartz
# memory or jdbc
spring.quartz.job-store-type=jdbc
spring.quartz.properties.org.quartz.threadPool.threadCount=5
spring.quartz.properties.auto-startup=true
#spring.quartz.properties.org.quartz.jobStore.useProperties = true
#spring.quartz.properties.org.quartz.jobStore.driverDelegateClass=org.quartz.impl.jdbcjobstore.HSQLDBDelegate
spring.quartz.properties.org.quartz.jobStore.driverDelegateClass=org.quartz.impl.jdbcjobstore.PostgreSQLDelegate

# Logging
logging.level.root=INFO
logging.level.org.springframework.web=INFO
logging.level.org.hibernate=INFO
logging.level.org.springframework.integration=INFO
logging.level.com.zaxxer.hikari=INFO
logging.level.org.springframework.security.oauth2=INFO
logging.level.org.springframework.security.jwt=INFO

# Firebase Cloud Messaging
fcmserver.senderid=1043784930865
fcmserver.serverkey=AAAA8wZuFjE:APA91bGpJQ3Sft0mZAaVMjDJGNLjFsdDLTo-37ZN69r4lKlHiRN78t4bCfkNKcXG5c9cJg-eGtWB7FqceQUDVtf7B1Zvw_2ycynqwKe2YqXFeyaq83Gf0R3AS1EKSWFS60GCr8eUEliz
fcmserver.fcmsender=org.radarbase.fcm.downstream.XmppFcmSender
fcmserver.xmpp.upstream.enable=true
fcmserver.host=fcm-xmpp.googleapis.com
# 5236 for test
fcmserver.port=5236

# RADAR protocols
radar.questionnaire.protocol.github.repo.path=RADAR-base/RADAR-aRMT-protocols
radar.questionnaire.protocol.github.file.name=protocol.json
radar.questionnaire.protocol.github.branch=master

# Configure the spring boot admin client
# Spring boot Admin
management.endpoints.web.exposure.include=*
management.endpoints.jmx.exposure.include=*
management.endpoint.health.show-details=always
#spring.boot.admin.client.url = http://localhost:8888
#spring.boot.admin.client.instance.name = radar-appserver
#security.user.name=radar
#security.user.password=appserver
#spring.boot.admin.client.metadata.user.name=${security.user.name}
#spring.boot.admin.client.metadata.user.password=${security.user.password}

# Configure security for RADAR Admin
radar.admin.user=radar
radar.admin.password=radar
spring.devtools.add-properties=false

# Hikari Datasource Pool
spring.datasource.hikari.connectionTimeout=60000
spring.datasource.hikari.idleTimeout=60000
spring.datasource.hikari.autoReconnect=false
spring.datasource.hikari.maximumPoolSize=15
spring.datasource.hikari.leakDetectionThreshold=120000

# OAuth2 Resource Server Security
security.oauth2.resource.id=res_AppServer
security.radar.managementportal.enabled=true
security.radar.managementportal.url=http://localhost:8081
# OAuth2 Client Security
#security.oauth2.client.clientId=
#security.oauth2.client.clientSecret=
#security.oauth2.client.accessTokenUri=
#security.oauth2.client.userAuthorizationUri=

# Github Authentication
security.github.client.token=
